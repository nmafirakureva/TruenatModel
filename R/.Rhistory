}
SAll <- bind_rows(lapply(sa_files, add_id_column))
SAll <- SAll %>% select(ID, everything())
# Print the combined data frame
print(SAll)
id_levels <- c('sa.base',
'sa.lo','sa.hi',
'sa.fracphc',
'sa.artcov',
'sa.truenatbl',
'sa.truenatint')
id_labels <- c('Basecase',
'0% discount rate','5% discount rate',
'Low PHC presentation',
'Higher ART coverage',
'No baseline testing at PHC',
'Universal Truenat under intervention')
SAll <- SAll %>%
mutate(ID = factor(ID, levels = id_levels, labels = id_labels)) %>%
arrange(ID)
SAll <- SAll %>%
rename("Assumption" = ID)
SAll
write_sheet(SAll,shidneat,sheet="SAll")
## --- Main parameters table ---
ParmsTable1 <- fread(gh('outdata/allparmsDistributionsClean.csv'))
ParmsTable2 <- fread(gh('outdata/allparmsFixed.csv'))
ParmsTable3 <- fread(gh('outdata/costparms.csv'))
#
write_sheet(ParmsTable1,shidneat,sheet="ParmsTab1RAW")
write_sheet(ParmsTable2,shidneat,sheet="ParmsTab2RAW")
write_sheet(ParmsTable3,shidneat,sheet="ParmsTab3RAW")
#
# # # Other parameter tables
# flz1 <- c(
#   "ParmsTable1.csv",   "ParmsTable2.csv","ParmsTable3.csv")
# for( fn in flz1)
#   upload.to.sheets(here('outdata//'),fn,shidneat)
## Generate manuscript tables/results for CONTACT
# rm(list=ls())
library(here)
library(tidyverse)
library(data.table)
library(glue)
## load other scripts
# source(here('R/contact_run.R'))           # call if there is need to generate results otherwise they're already available
gh <- function(x) glue(here(x))
# Table 2: main results
table2 <- fread(gh('outdata/allpout2.csv'))
# table2 <- allpout2
table2 <- melt(table2, id.vars = 'iso3')
table2$variable[grepl('.soc', table2$variable)]
unique(table2$variable)
table2$variable[grepl('^p', table2$variable)]
soc <- table2[grepl('.soc', variable),]
unique(soc$variable)
keep <- c(
# 'pttb',
# 'presumptive',
'assessments',
'passessphc',
'bacassess',
'pbacassessphc',
'refers',
'att',
'patt.phc',
'pttbtx',
'patt.bac',
'pftbtx',
'dx',
'pdxphc',
'pdxb',
'deaths','LYL',
# 'PHC.evaluated.cost', 'DH.evaluated.cost',
# 'PHC.treated.cost', 'DH.treated.cost',
'cost', 'ICER')
soc <- soc[,variable:=gsub('.soc', '', variable)]
soc <- soc[variable %in% keep,]
names(soc)[3] <- 'Control'
int <- table2[grepl('.int', variable),]
int <- int[!grepl('ICER', variable),]
int <- int[,variable:=gsub('.int', '', variable)]
int <- int[variable %in% keep,]
names(int)[3] <- 'Intervention'
d <- table2[grepl('D|DDH|DPHC|ICER', variable),]
d <- d[!grepl('soc|int', variable),]
d <- d[,variable:=gsub('D', '', variable)]
d <- d[,variable:=gsub('^H', 'DH', variable)]
unique(d$variable)
d <- d[variable %in% keep,]
setdiff(keep, unique(d$variable))
names(d)[3] <- 'Increment'
merged <- merge(soc, int, by=c('iso3', 'variable'), all.x = TRUE, all.y = TRUE)
merged <- merge(merged, d,by=c('iso3', 'variable'), all.x = TRUE, all.y = TRUE)
unique(merged$variable)
# vars <- c('PHC.presumptive','DH.presumptive',
#           'presumptive',
#           'PHC.evaluated','DH.evaluated',
#           'assessments',
#           'refers',
#           'pdxb',
#           'PHC.treated','DH.treated',
#           'att',
#           'deaths','LYL',
#           'PHC.evaluated.cost', 'DH.evaluated.cost','cost.assessments',
#           'PHC.treated.cost', 'DH.treated.cost',
#           'cost', 'ICER')
vars = keep
setdiff(vars, unique(merged$variable))
setdiff(unique(merged$variable), vars)
var_labs <- c(
'Assessments',
'Percent assessments at PHC',
'Bacteriological assessments',
'Percent bacteriological assessments at PHC',
'Referrals to hospital',
'Anti-tuberculosis treatments (ATT)',
'Percent ATT initiated at PHC',
'Percent Percent of true TB receiving ATT',
'Percent of ATT bacteriologically confirmed',
'Percent of ATT false-positive',
'Tuberculosis diagnoses',
'Percent of TB at PHC',
'Percent of TB bacteriologically confirmed',
'Deaths','Life-years lost',
# 'PHC.evaluated.cost', 'DH.evaluated.cost',
# 'PHC.treated.cost', 'DH.treated.cost',
'Cost (2024 US$)', 'ICER (Cost per DALY averted)')
merged$variable <- factor(merged$variable,
levels = vars)
setorder(merged, iso3, variable)
table2_format <- merged[,.(variable,'Standard of care' = Control, Intervention, Increment)]
table2_format$variable <- var_labs
names(table2_format)[1] <- 'Quantity per 100 children with presumptive TB (unless stated)'
table2_format
fwrite(table2_format,file=here('outdata/table2.csv'))
# # Supplementary Table: Outcomes parameters
# parameters1 <- setDT(PD0[2:24,])
# parameters1 <- parameters1[!NAME %in% c('hivprev.u5', 'hivprev.o5'),]
# parameters1 <- parameters1[,.(NAME, DISTRIBUTION, 'MEAN (IQR)'=`MEDIAN..IQR.`, DESCRIPTION, SOURCE)]
#
# fwrite(parameters1,file=here('outdata/tableS1.csv'))
#
# # Supplementary Table: Cascade of care parameters (aggregated)
# # Need ParmsTab2,
# # ParmsTab2 <- fread(gh('outdata/Parameters2.csv'))
# ParmsTab2 <- fread(here('indata/proportions.csv'))
#
# ParmsTab2 <- ParmsTab2[,variable:=gsub('int.|soc.', '',variable)]
# # ParmsTab2 <- dcast(ParmsTab2, country+isoz+variable~care_model)
# unique(ParmsTab2$variable)
# ParmsTab2 <- ParmsTab2[!variable %in% c("frac.bac.noclin.dx" ,"frac.bac.7d.ass","frac.bac.7d.noclin.dx","frac.bac.7d.ltfu","frac.noclin.dx","frac.clin.7d.ass","frac.noclin.7d.dx","frac.clin.7d.ltfu","frac.tpt.not.assessed","frac.tpt.not.reassessed","frac.tpt.not.eligible","frac.tpt.not.reeligible",  "frac.pre.tpt.ltfu" ,"frac.pre.tpt.reltfu","frac.tpt.notcompleted")]
# unique(ParmsTab2$variable)
# length(unique(ParmsTab2$variable))
# vars <- c('frac.screened','frac.asymp','frac.symp',
#           'frac.need.rescr','frac.rescreened','frac.rescr.asymp','frac.rescr.symp',
#           'frac.tpt.assessed','frac.tpt.eligible','frac.tpt.initiated','frac.tpt.reassessed','frac.tpt.reeligible','frac.tpt.reinitiated','frac.tpt.completed',
#           'frac.symp.attending', "frac.tb.evaluation",
#           'frac.bac.assess','frac.bac.dx','frac.bac.clin.dx','frac.bac.7d.clin.dx','frac.clin.assess','frac.clin.dx',
#           'frac.clin.7d.dx')
#
# var_labs <- c('Screened for TB symptoms','Negative screening','Positive screening',
#               'Need re-screening','Re-screened for TB symptoms','Negative re-screening','Positive re-screening',
#               'Assessed for TPT','Eligible for TPT','Initiated on TPT',
#               'Re-assessed for TPT','Re-eligible for TPT','Re-initiated on TPT','TPT completed',
#               'Attending facility referral',"Evaluated for TB",
#               'Bacteriological assessment','Bacteriological diagnosis','Clinical diagnosis after bacteriological assessment','Clinical diagnosis after bacteriological assessment & 7 days',
#               'Clinical diagnosis without bacteriological assessment',
#               'Clinical diagnosis after bacteriological assessment & 7 days','Clinical diagnosis without bacteriological assessment & 7 days')
#
# ParmsTab2$variable <- factor(ParmsTab2$variable,
#                           levels = vars)
# setorder(ParmsTab2, country, variable)
#
# ParmsTab2 <- cbind(ParmsTab2[country=='Cameroon',.(variable, Control=SOC, Intervention=INT)], ParmsTab2[country=='Uganda', .(Control=SOC, Intervention=INT)])
# ParmsTab2$variable <- var_labs
# ParmsTab2
# fwrite(ParmsTab2,file=here('outdata/tableS2.csv'))
#
# # Supplementary Table: Cascade of care parameters (disaggregated)
# # Need ParmsTab2,
# ParmsTab2a <- fread(gh('outdata/Parameters2a.csv'))
# ParmsTab2a <- ParmsTab2a[,variable:=gsub('int.|soc.', '',variable)]
# ParmsTab2a <- dcast(ParmsTab2a, country+isoz+variable+age~care_model)
# unique(ParmsTab2a$variable)
# ParmsTab2a <- ParmsTab2a[!variable %in% c('frac.bac.7d.noclin.dx','frac.bac.noclin.dx','frac.clin.7d.noclin.dx','frac.noclin.dx')]
# vars <- c('frac.screened','frac.rescreened',
#           'frac.asymp','frac.tpt.eligible','frac.tpt.initiated','frac.tpt.completed',
#           'frac.symp','frac.rescr.symp','frac.symp.attending',
#           'frac.bac.assess','frac.bac.dx','frac.bac.clin.dx','frac.clin.dx',
#           'frac.bac.7d.clin.dx','frac.clin.7d.clin.dx')
#
# var_labs <- c('Screened for TB symptoms','Re-screened for TB symptoms',
#               'Negative for TB symptoms','frac.tpt.eligible','frac.tpt.initiated','frac.tpt.completed',
#               'Positive for TB symptoms','Positive for TB symptoms (@re-screening)','Attending facility referral',
#               'Bacteriological assessment','Bacteriological diagnosis','Clinical diagnosis after bacteriological assessment',
#               'Clinical diagnosis without bacteriological assessment',
#               'Clinical diagnosis after bacteriological assessment & 7 days','Clinical diagnosis without bacteriological assessment & 7 days')
#
# ParmsTab2a$variable <- factor(ParmsTab2a$variable,
#                              levels = vars)
# setorder(ParmsTab2a, country, isoz, variable)
#
# ParmsTab2a <- cbind(ParmsTab2a[isoz=='CMR',.(age, variable, Control=SOC, Intervention=INT)], ParmsTab2a[isoz=='UGA', .(Control=SOC, Intervention=INT)])
# ParmsTab2a$variable <- rep(var_labs, each=2)
# ParmsTab2a
# fwrite(ParmsTab2a,file=here('outdata/tableS2a.csv'))
#
# # Supplementary Table: Cascade of care parameters (disaggregated)
# # Need DENR,
# DENR <- data.table(read_excel(here("indata/Baseline information.xlsx"), sheet = 'Sheet1', range = 'O3:R19'))
# DENR <- melt(DENR, variable.name = 'isoz')
# DENR <- DENR[,country:=ifelse(isoz=='CMR', 'Cameroon', 'Uganda')]
#
# TBPREV <- fread(here("indata/tb_epi.csv"))
# TBPREV[, isoz:=ifelse(country=='Uganda', 'UGA', 'CMR')]
# # TBPREV <- TBPREV[rando=='INT',]
# TBPREV <- TBPREV[,model:=ifelse(rando=='INT', 'int', 'soc')]
# TBPREV <- melt(TBPREV, id.vars = c('country','isoz','model', 'rando'), variable.name = 'metric')
# order <- names(DENR)
# ParmsTab3 <- rbind(DENR, TBPREV[,..order])
# ParmsTab3 <- ParmsTab3[, model:=ifelse(model=='soc', 'Control', 'Intervention')]
# ParmsTab3 <- dcast(ParmsTab3, country+isoz+metric~model)
# ParmsTab3 <- ParmsTab3[!metric %in% c('declared_per_household', 'enrolled_per_household', 'frac.declared.u5',
#                                       'frac.declared.hiv')]
# unique(ParmsTab3$metric)
# vars <- c('declared_per_index_case','enrolled_per_index_case','frac.enrolled.u5','frac.enrolled.hiv','tb_prev','tb_inc')
# var_labs <- c('Child contacts declared per index case','Child contacts enrolled per index case','Child contacts enrolled under 5 years','Child contacts enrolled HIV+','TB co-prevalence intervention','TB incidence intervention')
#
# ParmsTab3$metric <- factor(ParmsTab3$metric,
#                               levels = vars)
# setorder(ParmsTab3, country, isoz, metric)
#
# ParmsTab3 <- cbind(ParmsTab3[isoz=='CMR',.(metric, Control, Intervention)],
#                    ParmsTab3[isoz=='UGA', .(Control, Intervention)])
# ParmsTab3$metric <- var_labs
# ParmsTab3
# fwrite(ParmsTab3,file=here('outdata/tableS3.csv'))
#
# # Supplementary Table: intervention effects
# # Need Parameters3,
# ParmsTab4 <- fread(gh('outdata/Parameters3.csv'))
# ParmsTab4 <- ParmsTab4[NAME %in% c('tpt.resultOR','tpt.initiationOR','tpt.completionOR','tb.resultOR','tb.diagnosisOR'),]
# ParmsTab4 <- ParmsTab4[,.(NAME, DISTRIBUTION, `MEDIAN (IQR)`, DESCRIPTION, SOURCE)]
# ParmsTab4$NAME <- c("negative.screening", "tpt.initiation", "tpt.completion", "positive.screening", "tb.diagnosis"  )
# ParmsTab4
# fwrite(ParmsTab4,file=here('outdata/tableS4.csv'))
# Supplementary Results Table: 0-4 years results
# Table 2: supplementary results
table2Y <- fread(gh('outdata/allpout2Y.csv'))
# table2Y <- allpout2
table2Y <- melt(table2Y, id.vars = 'iso3')
table2Y$variable[grepl('.soc', table2Y$variable)]
unique(table2Y$variable)
table2Y$variable[grepl('^p', table2Y$variable)]
soc <- table2Y[grepl('.soc', variable),]
unique(soc$variable)
keep <- c(
# 'pttb',
# 'presumptive',
'assessments',
'passessphc',
'bacassess',
'pbacassessphc',
'refers',
'att',
'patt.phc',
'pttbtx',
'patt.bac',
'pftbtx',
'dx',
'pdxphc',
'pdxb',
'deaths','LYL',
# 'PHC.evaluated.cost', 'DH.evaluated.cost',
# 'PHC.treated.cost', 'DH.treated.cost',
'cost', 'ICER')
soc <- soc[,variable:=gsub('.soc', '', variable)]
soc <- soc[variable %in% keep,]
names(soc)[3] <- 'Control'
int <- table2Y[grepl('.int', variable),]
int <- int[!grepl('ICER', variable),]
int <- int[,variable:=gsub('.int', '', variable)]
int <- int[variable %in% keep,]
names(int)[3] <- 'Intervention'
d <- table2Y[grepl('D|DDH|DPHC|ICER', variable),]
d <- d[!grepl('soc|int', variable),]
d <- d[,variable:=gsub('D', '', variable)]
d <- d[,variable:=gsub('^H', 'DH', variable)]
unique(d$variable)
d <- d[variable %in% keep,]
setdiff(keep, unique(d$variable))
names(d)[3] <- 'Increment'
merged <- merge(soc, int, by=c('iso3', 'variable'), all.x = TRUE, all.y = TRUE)
merged <- merge(merged, d,by=c('iso3', 'variable'), all.x = TRUE, all.y = TRUE)
unique(merged$variable)
# vars <- c('PHC.presumptive','DH.presumptive',
#           'presumptive',
#           'PHC.evaluated','DH.evaluated',
#           'assessments',
#           'refers',
#           'pdxb',
#           'PHC.treated','DH.treated',
#           'att',
#           'deaths','LYL',
#           'PHC.evaluated.cost', 'DH.evaluated.cost','cost.assessments',
#           'PHC.treated.cost', 'DH.treated.cost',
#           'cost', 'ICER')
vars = keep
setdiff(vars, unique(merged$variable))
setdiff(unique(merged$variable), vars)
var_labs <- c(
'Assessments',
'Percent assessments at PHC',
'Bacteriological assessments',
'Percent bacteriological assessments at PHC',
'Referrals to hospital',
'Anti-tuberculosis treatments (ATT)',
'Percent ATT initiated at PHC',
'Percent Percent of true TB receiving ATT',
'Percent of ATT bacteriologically confirmed',
'Percent of ATT false-positive',
'Tuberculosis diagnoses',
'Percent of TB at PHC',
'Percent of TB bacteriologically confirmed',
'Deaths','Life-years lost',
# 'PHC.evaluated.cost', 'DH.evaluated.cost',
# 'PHC.treated.cost', 'DH.treated.cost',
'Cost (2024 US$)', 'ICER (Cost per DALY averted)')
merged$variable <- factor(merged$variable,
levels = vars)
setorder(merged, iso3, variable)
table2Y_format <- merged[,.(variable,'Standard of care' = Control, Intervention, Increment)]
table2Y_format$variable <- var_labs
names(table2Y_format)[1] <- 'Quantity per 100 children with presumptive TB (unless stated)'
table2Y_format
fwrite(table2Y_format,file=here('outdata/table2Y.csv'))
# Supplementary Table: 5-14 years results
table2O <- fread(gh('outdata/allpout2O.csv'))
# table2O <- allpout2
table2O <- melt(table2O, id.vars = 'iso3')
table2O$variable[grepl('.soc', table2O$variable)]
unique(table2O$variable)
table2O$variable[grepl('^p', table2O$variable)]
soc <- table2O[grepl('.soc', variable),]
unique(soc$variable)
keep <- c(
# 'pttb',
# 'presumptive',
'assessments',
'passessphc',
'bacassess',
'pbacassessphc',
'refers',
'att',
'patt.phc',
'pttbtx',
'patt.bac',
'pftbtx',
'dx',
'pdxphc',
'pdxb',
'deaths','LYL',
# 'PHC.evaluated.cost', 'DH.evaluated.cost',
# 'PHC.treated.cost', 'DH.treated.cost',
'cost', 'ICER')
soc <- soc[,variable:=gsub('.soc', '', variable)]
soc <- soc[variable %in% keep,]
names(soc)[3] <- 'Control'
int <- table2O[grepl('.int', variable),]
int <- int[!grepl('ICER', variable),]
int <- int[,variable:=gsub('.int', '', variable)]
int <- int[variable %in% keep,]
names(int)[3] <- 'Intervention'
d <- table2O[grepl('D|DDH|DPHC|ICER', variable),]
d <- d[!grepl('soc|int', variable),]
d <- d[,variable:=gsub('D', '', variable)]
d <- d[,variable:=gsub('^H', 'DH', variable)]
unique(d$variable)
d <- d[variable %in% keep,]
setdiff(keep, unique(d$variable))
names(d)[3] <- 'Increment'
merged <- merge(soc, int, by=c('iso3', 'variable'), all.x = TRUE, all.y = TRUE)
merged <- merge(merged, d,by=c('iso3', 'variable'), all.x = TRUE, all.y = TRUE)
unique(merged$variable)
# vars <- c('PHC.presumptive','DH.presumptive',
#           'presumptive',
#           'PHC.evaluated','DH.evaluated',
#           'assessments',
#           'refers',
#           'pdxb',
#           'PHC.treated','DH.treated',
#           'att',
#           'deaths','LYL',
#           'PHC.evaluated.cost', 'DH.evaluated.cost','cost.assessments',
#           'PHC.treated.cost', 'DH.treated.cost',
#           'cost', 'ICER')
vars = keep
setdiff(vars, unique(merged$variable))
setdiff(unique(merged$variable), vars)
var_labs <- c(
'Assessments',
'Percent assessments at PHC',
'Bacteriological assessments',
'Percent bacteriological assessments at PHC',
'Referrals to hospital',
'Anti-tuberculosis treatments (ATT)',
'Percent ATT initiated at PHC',
'Percent Percent of true TB receiving ATT',
'Percent of ATT bacteriologically confirmed',
'Percent of ATT false-positive',
'Tuberculosis diagnoses',
'Percent of TB at PHC',
'Percent of TB bacteriologically confirmed',
'Deaths','Life-years lost',
# 'PHC.evaluated.cost', 'DH.evaluated.cost',
# 'PHC.treated.cost', 'DH.treated.cost',
'Cost (2024 US$)', 'ICER (Cost per DALY averted)')
merged$variable <- factor(merged$variable,
levels = vars)
setorder(merged, iso3, variable)
table2O_format <- merged[,.(variable,'Standard of care' = Control, Intervention, Increment)]
table2O_format$variable <- var_labs
names(table2O_format)[1] <- 'Quantity per 100 children with presumptive TB (unless stated)'
table2O_format
fwrite(table2O_format,file=here('outdata/table2O.csv'))
# # CEAC plot incorporating sensitivity analyses
library(fs)
library(readxl)
file_paths = list.files(here("outdata"), pattern = "^ceacl.+Rdata")
drop <- c('ceaclAges.Rdata')
file_paths <- file_paths[!file_paths %in% drop]
topl <- 500 #100
df = data.table()
for(i in file_paths){
load(paste0(here('outdata', i)))
df_temp = copy(ceacl)
df_temp[,id:=gsub('.Rdata','', paste0(i))]
df = rbind(df, df_temp)
}
rm(df_temp)
## CEAC plot
cbPalette <- c("#0072B2", "#E69F00", "#999999","#009E73",
"#F0E442", "#D55E00", "#CC79A7")
lnszs <- c('Basecase'=2,
# '0% discount rate'=1,'5% discount rate'=1,
'Low PHC presentation'=1,'Higher ART coverage'=1,
'No baseline testing at PHC'=1
# 'Universal Truenat under intervention'=1
)
ceaclm <- melt(df,id=c('iso3','threshold', 'id'))
ceaclm[,Intervention:=ifelse(variable=='int','Intervention','SOC')]
## name key
ckey <- data.table(iso3=c('NGA'),
country=c('Nigeria'))
ceaclm <- merge(ceaclm,ckey,by='iso3',all.x=TRUE)
# id names
# id_levels <- c(ceacl,ceacllo,ceaclhi,ceacltptru,ceaclhicoprev,ceaclcdr,ceaclctryeff,ceaclhivprev,ceaclY,ceaclO)
# id_levels <- c('ceacl','ceacllo','ceaclhi','ceacltptru','ceaclhicoprev','ceaclcdr','ceaclY','ceaclO')
# id_labels <- c('Basecase','0% discount rate','5% discount rate','Reduced TPT visits','High tuberculosis co-prevalnce','Higher tuberculosis case detction rate', '0-5 years', '5-14 years')
id_levels <- c('ceacl',
'ceacllo','ceaclhi',
# 'ceaclfracphc',
'ceaclartcov',
# 'ceacltruenatbl',
'ceacltruenatint'
)
id_labels <- c('Basecase',
'0% discount rate','5% discount rate',
# 'Low PHC presentation',
'Higher ART coverage',
# 'No baseline testing at PHC',
'Universal Truenat under intervention'
)
ceaclm <- ceaclm[id %in% id_levels,]
ceaclm <- ceaclm[,id:=factor(id, levels = id_levels, labels = id_labels)]
ceaclm <- ceaclm[,labels:=id]
# plot
GP <- ggplot(data=ceaclm, aes(x=threshold, y=value, col=id)) +
geom_line(alpha = .9) +
scale_size_manual(breaks=id_labels, values=c(1,0.5,0.5,0.5,0.5,0.5,0.5))  +
theme_classic() +
guides(size=FALSE,col = guide_legend(nrow = 2)) +
theme(legend.position = 'top',legend.title = element_blank()) +
ggpubr::grids()+
scale_x_continuous(breaks = seq(0,topl,100)) +
ylab('Probability cost-effective')+
xlab('Cost-effectiveness threshold (USD per DALY averted)')+
scale_colour_manual(values=cbPalette) ## + xlim(x=c(0,1500))
GP
ggsave(GP,file=gh('plots/CEAC_MULTI') + '.png',w=7,h=5)
# GP <- ggplot(data=ceaclm, aes(x=threshold, y=value, col=id)) +
#   geom_line(alpha=.9)  +
#   geomtextpath::geom_textline(aes(threshold,value,
#                                   lty=id,
#                                   label=labels),
#                               size=2.5, vjust = 0.3, hjust = 0.3, show.legend = FALSE,
#                               text_only = TRUE, straight = FALSE, text_smoothing = 35) +
#   theme_classic() +
#   guides(size=FALSE,col = guide_legend(order = 2, nrow = 2)) +
#   theme(legend.position = 'top',legend.title = element_blank())+
#   theme(legend.text=element_text(size=rel(0.8)))+
#   ggpubr::grids()+
#   scale_x_continuous(breaks = seq(0,topl,500)) +
#   ylab('Probability cost-effective')+
#   xlab('Cost-effectiveness threshold (USD per DALY averted)')
#
# GP
#
# ggsave(GP,file=gh('plots/CEAC_MULTI_LABELS') + SA + '.png',w=7,h=5)
#
#
